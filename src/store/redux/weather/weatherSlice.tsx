import { createAppSlice } from "store/createAppSlice";
import { PayloadAction } from "@reduxjs/toolkit";
import { CityWeather, ErrorObject } from "./types";
import axios from "axios";
import { v4 } from "uuid";

export interface WeatherCitySliceState {
  citysweather: CityWeather[];         // —Ö—Ä–∞–Ω–∏–º –º–∞—Å—Å–∏–≤ —Å–≥–æ—Ä–æ–¥–∞–º–∏
  currentObject: CityWeather;          // —Ç–µ–∫—É—â–∏–π –æ–±—ä–µ–∫—Ç
  error: ErrorObject;                  // –µ—Ä–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  isFetching: boolean;                 // –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
}
const errorObjectInitialState: ErrorObject = {         // –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —ç—Ç–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –æ–±–Ω—É–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  cod: "",
  message: "",
};

const currentObjectInitialState: CityWeather = {       // –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —ç—Ç–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –æ–±–Ω—É–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  city: "",
  temp: 0,
  id: "",
  icon: "",
};
const weatherInitialState: WeatherCitySliceState = {
  citysweather: [],
  currentObject: currentObjectInitialState,
  error: errorObjectInitialState,
  isFetching: false,
};

export const weatherSlice = createAppSlice({                           // —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ª–∞–π—Å–∞
  name: "CITY_WEARTHER",                                               // –∏–º—è —Å–ª–∞–π—Å–∞
  initialState: weatherInitialState,

  reducers: (create) => ({                                            // —Å–æ–∑–¥–∞–Ω–∏–µ reducers (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ) 
    addCity: create.reducer((state: WeatherCitySliceState) => {
      state.citysweather.push(state.currentObject);                   // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ push
    }),
    deleteCurrentCity: create.reducer((state: WeatherCitySliceState) => {   // —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ—Ä–æ–¥–∞(—É–¥-–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ Home —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
      state.currentObject = currentObjectInitialState;
    }),
    deleteCity: create.reducer(                                       // —É–¥–∞–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞(–º–∞—Å—Å–∏–≤–∞)
      (state: WeatherCitySliceState, action: PayloadAction<string>) => {
        state.citysweather = state.citysweather.filter(                // —á–µ—Ä–µ–∑ filter
          (citysweather) => citysweather.id !== action.payload
        );
      }
    ),
    deleteErrorCard: create.reducer((state) => {                   // —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –æ—à–∏–±–∫–æ–π –≤ Home
      state.error = errorObjectInitialState;
    }),
    searchCity: create.asyncThunk(                             // –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É-—è: –ø–æ–∏—Å–∫ –≥–æ—Ä–æ–¥–∞
      async (city: string, { rejectWithValue }) => {
        try {                                             // —á–µ—Ä–µ–∑ try-catch –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
          const response = await axios.get(
            `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=209195650874d2713f1cfa54cc73bdd1`
          );
          return response;
        } catch (error) {
          return rejectWithValue(error);
        }
      },
      {
        pending: (state: WeatherCitySliceState) => {          // —Ç—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: pending,fulfilld,rejected
          state.error = errorObjectInitialState;
          state.isFetching = true;
        },
        fulfilled: (state: WeatherCitySliceState, action) => {
          state.currentObject = {
            city: action.payload.data.name,
            icon: `http://openweathermap.org/img/w/${action.payload.data.weather[0].icon}.png`,
            temp: Math.round(action.payload.data.main.temp),
            id: v4(),
          };
          state.isFetching = false;
        },
        rejected: (state: WeatherCitySliceState, action) => {
          state.isFetching = false;
          if (action.payload) {
            state.currentObject = currentObjectInitialState;
            const errPayload: any = action.payload;
            state.error = errPayload.response.data;
          } else {
            state.error = {
              cod: "General error",
              message: "Some network error",
            };
          }
        },
      }
    ),

    deleteAllCitys: create.reducer(() => {
      return weatherInitialState;
    }),
  }),

  selectors: {
    citysweather: (state) => state.citysweather,
    currentObject: (state) => state.currentObject,
    error: (state) => state.error,
    isFetching: (state) => state.isFetching,
  },
});

export const weatherActions = weatherSlice.actions;
export const weatherSelectors = weatherSlice.selectors;


// –¢—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è ‚Äî pending, fulfilled, –∏ rejected ‚Äî —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏,
//  —Ç–∞–∫–∏–º–∏ –∫–∞–∫ Promises –≤ JavaScript. –í–æ—Ç –∫—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ:
// üîÑ 1.  ‚Äî –æ–∂–∏–¥–∞–Ω–∏–µ
// ‚Ä¢ 	–û–ø–µ—Ä–∞—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å, –Ω–æ –µ—â—ë –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å.
// ‚Ä¢ 	Promise –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
// ‚Ä¢ 	–ù–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–∏ –æ—à–∏–±–∫–∞ –µ—â—ë –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω—ã.
// ‚úÖ 2.  ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
// ‚Ä¢ 	–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ.
// ‚Ä¢ 	Promise –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
// ‚Ä¢ 	–ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—é —á–µ—Ä–µ–∑ .
// ‚ùå 3.  ‚Äî –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ
// ‚Ä¢ 	–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π.
// ‚Ä¢ 	Promise –≤–µ—Ä–Ω—É–ª –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞.
// ‚Ä¢ 	–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ .
